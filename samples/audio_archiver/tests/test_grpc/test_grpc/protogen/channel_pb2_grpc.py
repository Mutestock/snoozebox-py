# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import protogen.channel_pb2 as channel__pb2


class ChannelStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateChannel = channel.unary_unary(
                '/channel.Channel/CreateChannel',
                request_serializer=channel__pb2.CreateChannelRequest.SerializeToString,
                response_deserializer=channel__pb2.CreateChannelResponse.FromString,
                )
        self.ReadChannel = channel.unary_unary(
                '/channel.Channel/ReadChannel',
                request_serializer=channel__pb2.ReadChannelRequest.SerializeToString,
                response_deserializer=channel__pb2.ReadChannelResponse.FromString,
                )
        self.UpdateChannel = channel.unary_unary(
                '/channel.Channel/UpdateChannel',
                request_serializer=channel__pb2.UpdateChannelRequest.SerializeToString,
                response_deserializer=channel__pb2.UpdateChannelResponse.FromString,
                )
        self.DeleteChannel = channel.unary_unary(
                '/channel.Channel/DeleteChannel',
                request_serializer=channel__pb2.DeleteChannelRequest.SerializeToString,
                response_deserializer=channel__pb2.DeleteChannelResponse.FromString,
                )
        self.ReadChannelList = channel.unary_unary(
                '/channel.Channel/ReadChannelList',
                request_serializer=channel__pb2.ReadChannelListRequest.SerializeToString,
                response_deserializer=channel__pb2.ReadChannelListResponse.FromString,
                )


class ChannelServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateChannel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadChannel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateChannel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteChannel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadChannelList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ChannelServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateChannel,
                    request_deserializer=channel__pb2.CreateChannelRequest.FromString,
                    response_serializer=channel__pb2.CreateChannelResponse.SerializeToString,
            ),
            'ReadChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadChannel,
                    request_deserializer=channel__pb2.ReadChannelRequest.FromString,
                    response_serializer=channel__pb2.ReadChannelResponse.SerializeToString,
            ),
            'UpdateChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateChannel,
                    request_deserializer=channel__pb2.UpdateChannelRequest.FromString,
                    response_serializer=channel__pb2.UpdateChannelResponse.SerializeToString,
            ),
            'DeleteChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteChannel,
                    request_deserializer=channel__pb2.DeleteChannelRequest.FromString,
                    response_serializer=channel__pb2.DeleteChannelResponse.SerializeToString,
            ),
            'ReadChannelList': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadChannelList,
                    request_deserializer=channel__pb2.ReadChannelListRequest.FromString,
                    response_serializer=channel__pb2.ReadChannelListResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'channel.Channel', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Channel(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/channel.Channel/CreateChannel',
            channel__pb2.CreateChannelRequest.SerializeToString,
            channel__pb2.CreateChannelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReadChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/channel.Channel/ReadChannel',
            channel__pb2.ReadChannelRequest.SerializeToString,
            channel__pb2.ReadChannelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/channel.Channel/UpdateChannel',
            channel__pb2.UpdateChannelRequest.SerializeToString,
            channel__pb2.UpdateChannelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/channel.Channel/DeleteChannel',
            channel__pb2.DeleteChannelRequest.SerializeToString,
            channel__pb2.DeleteChannelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReadChannelList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/channel.Channel/ReadChannelList',
            channel__pb2.ReadChannelListRequest.SerializeToString,
            channel__pb2.ReadChannelListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
